<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
	    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	    xmlns:p="http://www.springframework.org/schema/p"
	    xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:aop="http://www.springframework.org/schema/aop"
	    xmlns:tx="http://www.springframework.org/schema/tx"
	    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        <!-- 开启组件扫描 -->
       <context:component-scan base-package="com.fbzs.mapper"></context:component-scan>
       
       <!-- 加载properties配置文件 -->
       <context:property-placeholder location="classpath:*.properties"/>
       <!-- 配置数据源 -->
        <!-- 配置druid连接池 -->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="20" />
		<property name="minIdle" value="3" />
		<property name="maxActive" value="100" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="10000" />

	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="testWhileIdle" value="true" />

		<!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="20" />

		<!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->

		<property name="defaultAutoCommit" value="true" />

		<!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
		<property name="validationQuery" value="select 1 " />
		<property name="filters" value="stat" />	
	</bean>
	
	<!-- 配置整合mybatis -->
	<!-- 配置SqlSessionFactory: org.mybatis.spring.SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!-- 注入数据源 -->
	<property name="dataSource" ref="dataSource"></property>
	<!-- 配置别名:类名不区分大小写 -->
	<property name="typeAliasesPackage" value="com.fbzs.pojo"></property>
	<!-- 引入sql映射文件 -->
	<property name="mapperLocations" value="classpath:com/fbzs/mapper/*.xml"></property>
	<!-- 配置mybatis分页插件 -->
	<property name="plugins">
        <array>
            <bean class="com.github.pagehelper.PageInterceptor">
                <!-- 配置参数-->
                <property name="properties">
                    <value>
                        helperDialect=mysql
                    </value>
                </property>
            </bean>
        </array>
    </property>

	</bean>
	
	<!-- 配置dao接口实现类动态代理生成：交给spring框架生成 -->
	<!-- 配置Mapper接口扫描  替代一次只能进行一个接口扫描的配置 :id默认是接口名首字母小写   MapperScannerConfigurer-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 <!-- 配置要扫描的包 -->
	 <property name="basePackage" value="com.fbzs.mapper"></property>
	 <!-- 如果只有一个数据源  可以不用配置  推荐配置注入sqlSessionFactory-->
	 <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
       </beans>